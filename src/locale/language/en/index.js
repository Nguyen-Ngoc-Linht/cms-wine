export default {
  name: 'en',
  header: {
    home: 'Home',
  },
  app: {
    overview: 'Overview',
    version: 'Version',
    logOut: 'Logout',
    profile: 'Profile',
  },
  route: {
    i18n: 'i18n - en',
    home: 'Home',
    verifyLogin: 'Verify login',
    search: 'Search',
    profile: 'Profile',
    weightVehicleDetail: 'Weight vehicle Detail',
    setting: 'Setting',
    settingConnect: 'Connect setting',
    weightStation: 'Weight station',
    settingGenneral: 'General settings',
    detailWeightStation: 'Detail Weight station',
    device: 'Device',
    report: 'Report',
    trafficReport: 'Traffic',
    violationReport: 'Violations',
    statisticReport: 'Total station statistical',
    statisticVehicleReport: 'Statistic Vehicle by station',
    notify: 'Notify',
    postInspection: 'Post Inspection',
    systemManagement: 'System management',
    passwordPolicy: 'Password policy',
    administrativeDepartment: 'Danh mục hành chính, phòng ban',
    sessionPolicy: 'Session',
    capchaConfiguration: 'Captcha Configuration',
    administration: 'Administration',
    administrationSystem: 'System Administration',
    administrationCategory: 'Category Management',
    expressway: 'Expressway information',
    fareTable: 'Price list',
    functionalForces: 'Information on functional forces',
    userManagement: 'User management',
    addUser: 'Add user',
    ipManagement: 'Limit access IP addresses',
    actionManagement: 'System active management',
    backupManagement: 'Backup management',
    logManagement: 'Log management',
    roleManagement: 'Role management',
    explanationSupport: 'Supports explanation of discrepancies',
    monitor: 'Monitor',
    tollMonitoring: 'Toll Monitoring',
    tollKPI: 'Toll KPI',
    abnormalTransaction: 'Monitor unusual transactions',
    freeCarTransaction: 'Free car transactions',
    vehicleTransaction45: 'Trading in class 4 and class 5 vehicles',
    warningOfUnusualEvents: 'Warning of unusual events',
    configWarning: 'Config warning',
    errorHandlingMonitoring: 'Error Handling Monitoring',
    VECRequestProcessingMonitoring: 'VEC Request Processing Monitoring',
    ETCDeviceMonitoring: 'ETC Device Monitoring',
    ratingAndScoring: 'Rating and Scoring',
    monitoringLog: 'Monitoring Log',
    tollCollectionReport: 'Toll Collection Report',
    monitorConfig: 'KPI formulas',
    periodicMonitoring: 'Periodic Monitoring',
    handlingErrorRequestVEC: 'Handling Error and Request VEC',
    reconciliation: 'Reconciliation',
    tollReportReconciliation: 'Toll collection data',
    exemptVehicleReconciliation: 'Fee-exempt vehicle transactions',
    unusualReconciliation: 'Unusual warning',
    postInspectionReconciliation: 'Post inspection report',
    dataCollection: 'Data collection',
    dataCollectionReport: 'Report management',
    incidentManagement: 'Incident management',
    collectLogfile: 'Collect files automatically',
    collectLogfileDevice: 'Collect device logfile',
    collectBE: 'Collect station BE data',
    collectUser: 'Collect user data',
    collectApiFe: 'Collect API FE data',
    collectVehicle: 'Fee-exempt vehicle',
    statisticalReport: 'Statistical Report',
    differentError: 'Different error',
    revenueFlow: 'Revenue Flow',
    detailKPIStatistics: 'Detail KPI statistical',
    trafficRevenueManagement: 'Traffic revenue management',
    standardizeData: 'Check validity',
    collectionConfiguration: 'Collection configuration',
    configDashboard: 'Config display position',
    configureReconciliation: 'Configure reconciliation',
    standardConfig: 'Standardized configuration',
    searchAll: 'Monitor all transactions',
  },
  el: {
    colorpicker: {
      confirm: 'OK',
      clear: 'Clear',
    },
    datepicker: {
      now: 'Now',
      today: 'Today',
      cancel: 'Cancel',
      clear: 'Clear',
      confirm: 'OK',
      selectDate: 'Select date',
      selectTime: 'Select time',
      selectDay: 'Select day',
      selectHour: 'Select hour',
      selectMinute: 'Select minute',
      startDate: 'Start date',
      startTime: 'Start time',
      begin: 'Begin',
      end: 'End',
      endDate: 'End date',
      endTime: 'End time',
      prevYear: 'Previous year',
      nextYear: 'Next year',
      prevMonth: 'Previous month',
      nextMonth: 'Next month',
      month: 'Month',
      quarter: 'Quarter {0}',
      year: '',
      day: 'Day',
      minute: 'Minute',
      month1: 'January',
      month2: 'February',
      month3: 'March',
      month4: 'April',
      month5: 'May',
      month6: 'June',
      month7: 'July',
      month8: 'August',
      month9: 'September',
      month10: 'October',
      month11: 'November',
      month12: 'December',
      weeks: {
        sun: 'Sun',
        mon: 'Mon',
        tue: 'Tue',
        wed: 'Wed',
        thu: 'Thu',
        fri: 'Fri',
        sat: 'Sat',
      },
      months: {
        jan: 'Jan',
        feb: 'Feb',
        mar: 'Mar',
        apr: 'Apr',
        may: 'May',
        jun: 'Jun',
        jul: 'Jul',
        aug: 'Aug',
        sep: 'Sep',
        oct: 'Oct',
        nov: 'Nov',
        dec: 'Dec',
      },
      to: 'to',
    },
    select: {
      loading: 'Loading',
      noMatch: 'No matching data',
      noData: 'No data',
      placeholder: 'Select',
      selectAll: 'All',
    },
    cascader: {
      noMatch: 'No matching data',
      loading: 'Loading',
      placeholder: 'Select',
      noData: 'No data',
    },
    pagination: {
      goto: 'Go to',
      pagesize: ' /page',
      total: 'Total {total}',
      pageClassifier: '',
    },
    messagebox: {
      title: 'Message',
      confirm: 'OK',
      cancel: 'Cancel',
      error: 'Invalid data',
    },
    upload: {
      deleteTip: 'Press delete to remove',
      delete: 'Delete',
      preview: 'Preview',
      continue: 'Continue',
      reachLimit: 'Upload limit {0} file(s)',
    },
    table: {
      emptyText: 'No data',
      confirmFilter: 'Confirm',
      resetFilter: 'Reset',
      clearFilter: 'Clear all',
      sumText: 'Sum',
    },
    tree: {
      emptyText: 'No data',
    },
    transfer: {
      noMatch: 'No matching data',
      noData: 'No data',
      titles: ['List 1', 'List 2'],
      filterPlaceholder: 'Enter keyword',
      noCheckedFormat: '{total} items',
      hasCheckedFormat: '{checked}/{total} checked ',
    },
    image: {
      error: 'ERROR',
    },
    pageHeader: {
      title: 'Back',
    },
    popconfirm: {
      confirmButtonText: 'OK',
      cancelButtonText: 'Cancel',
    },
  },
  configUser: {
    sessionTimeoutNotify:
      'Your session has been closed because the timeout has been exceeded. Please log in again!',
    sessionList: 'Session list',
    exportFile: 'Export file',
    importFile: 'Import file',
    importDrag: 'Drag and drop or click to upload file(s)',
    importImage: 'Drag and drop or click to upload image(s)',
    importLimit: 'File {0} with size less than {1}',
    importLimitAndType: 'Format {0} with size less than {1}',
    processTime: 'Processing time',
    processTimeTooltip: 'Check the Processing Time option to search by processing time',
    search: 'Search',
    searchFilter: 'Filter',
    updateInterval: 'Update interval',
    second: 'Second',
    belowPenaltyLevel: 'Below penalty level',
    atPenaltyLevel: 'At penalty level',
    lane: 'Lane',
    time: 'Time',
    vehicleType: 'Vehicle type',
    frontPlate: 'Front plate',
    rearPlate: 'Rear plate',
    licensePlate: 'License Plate',
    totalWeightF: 'Total weight (kg)',
    totalWeight: 'Total weight (kg)',
    axleCount: 'Axle count',
    speed: 'Speed (km/h)',
    ttSpeed: 'The measured vehicle speed is unstable',
    totalWeightAccordingF: 'Total Weight according to TT46 (kg)',
    totalWeightAccording: 'Total Weight according to TT46 (kg)',
    permissibleWeightF: 'Vehicles exceeding total PW of the road bridge (%)',
    permissibleWeight: 'Vehicles exceeding total PW of the road bridge (%)',
    permissibleAxleLoadF: 'Vehicles exceeding PAL of the road bridge (%)',
    permissibleAxleLoad: 'Vehicles exceeding PAL of the road bridge (%)',
    permissibleCargoWeightF: 'Vehicles exceeding PCW for TP (%)',
    permissibleCargoWeight: 'Vehicles exceeding PCW for TP (%)',
    towedVehicleWeightF: 'Vehicles exceeding Towed Vehicle Weight (%)',
    towedVehicleWeight: 'Vehicles exceeding Towed Vehicle Weight (%)',
    permissibleHeightF: 'Vehicles exceeding PH of the road bridge (m)',
    permissibleHeight: 'Vehicles exceeding PH of the road bridge (m)',
    envViolationF: 'Vehicles violates environmental regulations',
    envViolation: 'Vehicles violates environmental regulations',
    route: 'Route',
    station: 'Station',
    typeVehicle: 'Type of vehicle',
    typeViolation: 'Type of violation',
    levelViolation: 'Level of violation',
    approvalStatus: 'Approval status',
    weightStation: 'Weight station',
    note: 'Note',
    vehicleTypeCodeGSTP: 'Vehicle type code GSTP',
    vehicleTypeCodeRoute: 'Fe vehicle type code of the route {0}',
    vehicleTypeCodeRouteBE: 'Be vehicle type code',
    ticketTypeCodeGSTP: 'Ticket type code GSTP',
    ticketTypeCodeRoute: 'Fe ticket type code of the route {0}',
    ticketTypeCodeRouteBE: 'Be ticket type code',
    ticketCodeType: 'Ticket code type',
    // detail weight station
    tt46: 'In accordance with Decree 46',
    grossWeight: 'Gross weight',
    stationLane: 'Station, lane',
    totalLoad: 'Total load (adjusted for error) (6)',
    maximumWeight: 'Permissible weight (7)',
    maximumColumn: 'The maximum value of column (16)',
    tooltipMaximumWeight: 'In accordance with Article 17 of Circular No. 46/2015/TT-BGTVT',
    length: 'Length',
    SpeedDetail: 'Speed',
    controlBoard: 'Control board',
    conclude: 'Conclusion',
    overLoadTotalCP: 'Total CP overload',
    overloadNotReaching: 'Overload not reaching penalty level',
    overloadReaching: 'Overload reaching penalty level',
    shaftoverloadCP: 'Shaft overload CP (9)',
    shaftoverloadCP1: 'Shaft overload CP',
    cargoOverloadCP: 'Cargo overload CC CP (19)',
    cargoOverloadCP1: 'Cargo overload CC CP',
    overloadLeadCP: 'Lead overload CP (22)',
    overloadLeadCP1: 'Lead overload CP',
    vehicleRegistrationInformation: 'Vehicle registration information',
    vehicleOwner: 'Vehicle owner',
    address: 'Address',
    validUntil: 'Valid until',
    totalVehicleWeight: 'Total weight',
    selfWeight: 'Self weight (1)',
    registrationDate: 'Registration date',
    cargoWeightCP: 'Cargo CP (3)',
    towingWeightCP: 'Towing CP (4)',
    selfeAssSMRM: 'Self SMRM/RM (2)',
    numberPeople: 'Number CP people (5)',
    specification: 'Specification',
    value: 'Value',
    resultHeader1:
      'Results of vehicle inspection according to permissible axle load of the road bridge',
    resultHeader2: 'Results of weighing vehicle according to cargo weight CCCP TGGT',
    resultHeader3:
      'Results of weighing vehicle according to permissible towing weight for both car and trailer',
    axleLoadLimit: 'Axle load limit',
    limitCargoWeight: 'Limits of cargo weight and towing weight',
    axleDistance: 'Axle distance (m)',
    resultsOfCargo: 'Results of cargo weight CCCP TGGT and towing weight',
    loadWeight: 'Load weight (kg)',
    axle: 'Axle',
    axleDistanceMeters: 'Axle distance (m)',
    leftLoad: 'Left load (kg)',
    RightLoad: 'Right load (kg)',
    totalLoadDetail: 'Total load (kg)',
    axleGroup: 'Axle group',
    permissibleLoad: 'Permissible (kg)',
    ttPermissibleLoad: 'In accordance with Article 16 of Circular No. 46/2015/TT-BGTVT',
    axleGroupLoad: 'Axle group (kg)',
    overloadPercentage: 'Overload percentage (%)',
    cargoWeight: 'Cargo weight measurable (kg)',
    tooltipCargoWeight:
      'Total vehicle weight - (Vehicle weight + Weight of SMRM/RM + (65 x Number of Passengers (NP))',
    tooltipTowing: '20 = 10 + Weight of SMRM/RM',
    permissibleLoadTons: 'Permissible load (kg)',
    exceedingCargo: 'Exceeding cargo weight CCCP TGGT (kg)',
    percentageOfExceeding: 'Percentage of Exceeding Towing Limit (%)',
    totalTowing: 'Total towing weight (kg)',
    exceedingCargoWeight: 'Exceeding cargo weight CP (kg)',
    percentageOfTowing: 'Percentage of exceeding towing weight (%)',
    pendingInspection: 'Pending inspection',
    overload: 'Overload',
    asPenaltyLevel: 'of the penalty level',
    inspectNote: '(*) Check vehicle information is correct before confirming',
    // Chi tiết phương tiện
    overloadModel: 'Overload model',
    vehicleInformation: 'Vehicle information',
    weighingHistory: 'Weighing history',
    numberAllowed: 'Number of passengers allowed',
    tankTruck: 'This is a tank truck',
    postInspection: 'Post-inspection time',
    descriptionVehicleType: 'Description of vehicle type',
    brand: 'Brand',
    numberTypes: 'Number of types',
    chassisNumber: 'Chassis number',
    engineNumber: 'Engine number',
    yearManufacture: 'Year of manufacture',
    countryManufacture: 'Country of manufacture',
    expirationDate: 'Expiration date',
    baseLength: 'Base length (mm)',
    weight: 'Weight (kg)',
    weightParticipating: 'Weight of specialized cargo  <br> participating in GT (kg)',
    weightTow: 'Weight allowed <br> to tow (kg)',
    TotalParticipate: 'Total weight allowed to participate <br> in GT (kg)',
    managementNumber: 'Management number',
    vehicleSpecifications: 'VEHICLE SPECIFICATIONS',
    vehicle: 'VEHICLE',
    // hậu kiểm
    tankLiquidTruck: 'Tank trucks transporting liquids',
    listInspectSession: 'Weight sessions need to be moderated',
    //
    addNew: 'Add new',
    editUser: 'Edit',
    detailUser: 'Detail',
    updateUser: 'Update',
    addNewAccount: 'Add new account',
    refresh: 'Refresh',
    orderNumber: 'No.',
    account: 'Account',
    fullName: 'Full name',
    userCode: 'User code',
    role: 'Role',
    group: 'Group',
    region: 'Region',
    policeRank: 'Police rank',
    workUnit: 'Work unit',
    position: 'Position',
    phoneNumber: 'Phone number',
    phoneNumber1: 'Phone number',
    email: 'Email',
    searchByAccountAndName: 'Search by account and name',
    selected: 'Selected',
    avatar: 'Avatar',
    addAvatar: 'Add avatar',
    status: 'Status',
    activeStatus: 'Active status',
    personalInfo: 'Personal information',
    birthDate: 'Birth date',
    area: 'Area',
    appList: 'App list',
    app: 'App',
    all: 'All',
    delete: 'Delete',
    edit: 'Edit',
    cancel: 'Cancel',
    previous: 'Previous',
    next: 'Next',
    loginPassword: 'Login password',
    retypePassword: 'Retype password',
    uploadImage: 'Upload image',
    active: 'Active',
    inactive: 'Inactive',
    pleaseEnter: 'Please enter',
    pleaseSelect: 'Please select',
    validateMessage: {
      fieldRequired: '{0} is required',
      required: 'This field is required',
      invalid: '{data} is invalid',
      emailFormat: 'Please enter a valid email format',
      phoneFormat: 'Please enter a valid phone number format',
      passwordMismatch: 'Password does not match',
      minimumPasswordLength: 'Minimum password length is {0} characters',
      passwordFormat: 'Password contains {0} to {1} characters and includes {2}',
      valueBetween: 'Value must be between {min} and {max}',
      aLessThanB: '{0} must less than {1}',
    },
    message: {
      confirmDelete: 'Are you sure you want to delete this {0}?',
      deleteSuccess: 'User deleted successfully',
      addSuccess: 'Added successfully',
      addAccountFailed: 'Failed to add new account',
      updateSuccess: 'Update successful',
      updateAccountFailed: 'Failed to update account',
      formatNotAllowed: 'Format not allowed',
      exceededMaxAllowedSize: 'Exceeded maximum allowed size (5Mb)',
      overflowMaxSize: 'File size exceeds {0}Mb',
      imageTooSmall: 'Image size too small. Minimum size is:',
      addObjectSuccess: 'Add {0} successful',
      addObjectFail: 'Add {0} failed',
      sendSuccess: 'Send success',
    },
    passwordPolicy: {
      timeSetting: 'Time setting',
      timeNotifyChangePass: 'Password change prompt time',
      passValidTime: 'Password validity period',
      passwordRule: 'Password rules',
      numberChar: 'Number of characters',
      maxChar: 'Max number of characters',
      minChar: 'Min number of characters',
      typeChar: 'Type of characters',
      specialChar: 'Special character',
      upperCase: 'Uppercase',
      lowerCase: 'Lowercase',
      number: 'Number',
      limitFailedAttempt: 'Limit failed login attempt',
      numberFailedAttemp: 'Number of failed login attempts',
      timePeriod: 'Time period',
      lockTime: 'Lock time',
      sessionTimeout: 'Session timeout after',
      saveTimeSettingSuccess: 'Update successful',
      savePasswordRuleSuccess: 'Update successful',
      saveLimitAttemptSuccess: 'Update successful',
    },
    // functional forces
    detailsInfo: 'Detailed information',
    addFunctionalForces: 'Add functional forces',
    editFunctionalForces: 'Edit the authorities',
    deleteFunctionalForces: 'Delete the functional forces',
    forceName: 'Name of functional forces',
    forceCode: 'Code of functional forces',
    nbHotlineForce: 'Hotline number of the functional force unit',
    nbPhoneForce: 'Contact phone number of functional forces',
    nameOfficerForce: 'Name of the focal officer of the functional force',
    descriptionOfBusinessFunctions: 'Description of business functions',
    emailOfFunctionalForce: 'Email of the functional force focal point',
    operation: 'Operation',
    // fare table
    fareTableInfo: 'Tariff information',
    addFareTable: 'Add fare table',
    nameFareTable: 'Name of tariff table',
    gland: 'Gland',
    router: 'Route',
    typeLane: 'Lane Type',
    laneIn: 'Lane in',
    laneOut: 'Lane out',
    regulatoryName: 'Name of regulations related to types of charges',
    fareInformation: 'Fare information',
    unusualTransactionsInfo: 'Information on arrears of unusual transactions',
    unspecifiedInput: 'Input cannot be determined',
    furthestAccordings: 'Arrears according to the furthest distance',
    vehicleRecovery: 'Vehicle Recovery',
    nameFare: 'Name Fare',
    codeFare: 'Code Fare',
    entryStation: 'Entry station',
    exitStation: 'Exit Station',
    addFare: 'Add fare',
    deleteFare: 'Delete Fare',
    deleteFareTable: 'Delete fare',
    activeFareTable: 'Activate the tariff table',
    closedFareTable: 'Close the tariff table',
    textConfirmFareTable: 'Are you sure to activate this tariff table',
    textClosedFareTable: 'Are you sure to close this tariff table',
    open: 'Open',
    close: 'Close',
    closed: 'Closed',
    processing: 'Processing',
    processes: 'Processed',
    processed: 'Processed',
    unprocessed: 'Unprocessed',
    activate: 'Active',
    activeFare: 'Activate',
    action: 'Action',
    send: 'Send',
    // Gland expressway
    expresswayManagement: 'Expressway Management',
    stationManagement: 'Station Management',
    laneManagement: 'Lane Management',
    addExpressway: 'Add Expressway',
    editExpressway: 'Edit Expressway',
    deleteExpressway: 'Delete Expressway',
    routeName: 'Route Name',
    routeCode: 'Route Code',
    routeDescription: 'Route Description',
    timePutsIntoOperation: 'Time to Put Into Operation',
    addStation: 'Add Station',
    editStation: 'Edit Station',
    deleteStation: 'Delete Station',
    serviceProviderFe: 'Service Provider FE',
    serviceProviderBE: 'Service Provider BE',
    miningOperatingUnit: 'Mining Operating Unit',
    managementUnit: 'Management Unit',
    infoStation: 'Info Station',
    nameStation: 'Name Station',
    stationLocation: 'Station Location',
    stationDescription: 'Station Description',
    stationType: 'Station Type',
    inline: 'Inline',
    outline: 'Outline',
    nbOfEntryLane: 'Number of entry lanes',
    nbOfExitLane: 'Number of exit lanes',
    numberLane: 'Lane number',
    numberExitLane: 'Exit lane number',
    numberEntryLane: 'Entry lane number',
    addLane: 'Add Lane',
    editLane: 'Edit Lane',
    deleteLane: 'Delete Lane',
    nameLane: 'Name Lane',
    manageSupplier: 'Manage Supplier',
    infoSupplier: 'Information Supplier',
    addSupplier: 'Add Supplier',
    editSupplier: 'Edit Supplier',
    deleteSupplier: 'Delete Supplier',
    confirmDeleteSupplier: 'Confirm Delete Supplier?',
    codeSupplier: 'Code Supplier',
    nameSupplier: 'Name Supplier',
    typeSupplier: 'Type Supplier',
    servicePeriod: 'Service Rental Period',
    listMembers: 'List Members',
    addMember: 'Add Member',
    deleteMember: 'Delete Member',
    userManagement: {
      userList: 'User list',
      username: 'Username',
      username1: 'Username',
      routeStation: 'Route - Station',
      route: 'Route',
      station: 'Station',
      createDate: 'Create date',
      selectRole: 'Select role',
      listPerByRole: 'List permissions by role',
      confirmActive: 'Are you sure you want to unblock this user ?',
      confirmBlock: 'Are you sure you want to block this user?',
      confirmDelete: 'Are you sure you want to delete this user?',
      changePassword: 'Change password',
      currentPass: 'Current password',
      newPass: 'New password',
    },
    acceptIPList: 'List Accepted IP',
    administrativeCategory: 'Administrative categories',
    result: 'Result',
    viewDetail: 'View detail',
    seeMore: 'See more',
    addNewConfig: 'Add new {0} success',
    welcome: `Welcome to </br> Toll collection monitoring system`,
    unlock: 'Unlock',
  },
  placeholder: {
    search: 'Search',
    reset: 'Reset',
    apply: 'Apply',
    export: 'Export File',
    detail: 'Detail',
    censorViolation: 'Censor Violation',
  },
  weightVehicle: {
    numberOrder: 'No.',
    plate: 'Plate',
    frontPlate: 'Front Plate',
    backPlate: 'Back Plate',
    typeVehicle: 'Type vehicle',
    axleNumber: 'Axle number',
    lengthD: 'Length D',
    registrationDate: 'Registration Date',
    validTill: 'Valid Till',
    selfWeight: 'Self Weight (kg)',
    transportWeight: 'Transport Weight (kg)',
    followedWeight: 'Followed Weight (kg)',
    totalWeight: 'Total Weight (kg)',
    updateBy: 'Update By',
    updateTime: 'Update Time',
    numberTransaction: 'Number weighings',
    noPlate: 'No Plate',
    noFilePreview: 'Preview file not found',
  },
  weightStation: {
    printWeightTicket: 'Print Weight Ticket',
    printPenaltyTicket: 'Print Penalty Ticket',
    exportWeightVideo: 'Export video',
    totalTurnSession: 'Total number of weighing sessions',
    noData: 'No data',
    lane: 'Lane',
    turnWeight: 'Turn Weight',
    turnViolation: 'Turn Violation',
    turn: 'turn',
    connect: 'Connect',
    disconnect: 'Disconnect',
    infoStation: 'Info Station',
    name: 'Name',
    site: 'Site',
    totalLane: 'Total Lane',
    unitMannager: 'Unit Mannager',
    active: 'Active',
    statisticData: 'Statistic Data',
    time: 'Time',
    day: 'Day',
    week: 'Week',
    weekNumber: 'Week {0}',
    month: 'Month',
    quarter: 'Quarter',
    year: 'Year',
    direction: 'Direction',
    chartSessionForDay: 'Weight session chart during the day',
    feature: 'The skill are improving',
    statusLane: 'Lane status',
    noViolation: 'No Violation',
    violation: 'Violation',
    note: 'The chart combines total weighing (bar chart) and violations (line chart including Un-post-check and Post-check) by each hour of the day.',
    type: 'Type',
    data: 'Data',
    turnVehicle: 'Vehicle traffic',
    vehicleBody: 'Body-on-frame vehicle',
    vehicleCombine: 'Combined vehicle',
    yetChecked: 'No post-test yet',
    checked: 'Post-checked',
    warning: 'Overloaded vehicles have not yet been fined',
    vehicleOverload: 'Vehicles overloaded to the point of fines',
    violationsHaveInfo: 'Violations have enough handling information',
    violationsHaveInfoNotHandle: 'Violation with enough information is not enough to handle',
    violationsNotInfoNotHandle: 'Violations do not have enough information to handle',
  },
  omsSetting: {
    addAsset: 'Add Asset',
    search: 'Search',
    numOrder: 'No.',
    stationName: 'Stattion name',
    site: 'Site',
    direction: 'Direction',
    numberLane: 'Lane number',
    status: 'Status',
    selected: 'Selected',
    connected: 'connected',
    disconnected: 'Disconnected',
    titledialogAddset: 'List of Asset devices',
    confirmDelete: 'You definitely want to delete the selected record?',
    confirmMultiDelete: 'Are you sure you want to delete the selected items?',
    confirmUpdateVideo:
      'Are you sure you want to perform this operation? This will refresh the configuration and overwrite previously installed information.',
    warning: 'Warning',
    confirm: 'Confirm',
    cancel: 'Cancel',
    deleteSuccess: 'Record deleted successfully',
    deleteSuccess1: 'Deleted successfully',
    deviceCode: 'Device code',
    deviceName: 'Device name',
    constructionCode: 'Construction Code',
    constructionName: 'The name of construction',
    type: 'Type {0}',
    display: 'Display',
    action: 'Action',
    sync: 'Sync',
    syncInfo: 'Synchronize information',
    stationCode: 'Station Code ',
    stationBECode: 'Station BE Code ',
    idConnect: 'ID connect',
    construction: 'Construction',
    longitude: 'Longitude',
    latitude: 'Latitude',
    placeholderStationName: 'Please enter station name',
    placeholderIdConnect: 'Please enter the connection ID data with the 3rd party software',
    placeholderConstruction: 'Please select Construction',
    placeholderSite: 'Please select a site',
    placeholderLongitude: 'Please select a longitude',
    placeholderLatitude: 'Please select a latitude',
    note: '*Note: Longitude and latitude are data for drawing on the map background',
    placeholderDirection: 'Please select a direction',
    placeholderNumberLane: 'Please enter the weigh station lane number',
    placeholderEnter: 'Please enter',
    placeholderSelect: 'Please select',
    ruleStationName: 'Please enter station name',
    ruleIdconnect: 'Please enter ID connect',
    ruleSite: 'Please select site',
    ruleAppName: 'Please enter app Name',
    ruleAddress: 'Please enter address',
    ruleConnectAccount: 'Please enter connect account',
    ruleConnectPassword: 'Please enter connect password',
    ruleChooseCam: 'Please choose Camera',
    ruleChooseLane: 'Please choose Lane',
    ruleNameForces: 'Please enter the name of the authority',
    ruleGland: 'Please select Route',
    ruleNameFareTable: 'Please enter the name of the tariff table',
    ruleRegulationFare: 'Please enter the specified name',
    ruleFarePrice: 'Please enter fare information',
    ruleUnspecifiedInput: 'Please enter a value',
    ruleLane: 'Please enter Lane name',
    ruleChooseGland: 'Please select Route',
    ruleChooseStation: 'Please select Station',
    ruleChooseTypeLane: 'Please select lane type',
    ruleEnterGland: 'Please enter Route name',
    ruleTimePutInto: 'Please select a mining start date',
    ruleTypeStation: 'Please select station type',
    ruleLocationStation: 'Please enter lane location',
    ruleCodeStation: 'Please enter code BE',
    ruleExitLane: 'Please enter lane number',
    ruleEntryLane: 'Please enter the exit lane number',
    ruleLaneCode: 'Please enter lane number',
    ruleMaxLengthText: 'Exceeds {0} characters',
    ruleMaxLengthText1000: 'Exceeds 1000 characters',
    ruleMaxLengthText100: 'Exceeds 100 characters',
    ruleEnter: 'This field is required',
    ruleNumber: 'Lane number is an integer',
    use: 'Use',
    notUse: 'Not used',
    successSync: 'Synchronization successful',
    failSync: 'Synchronization failed',
    successUpdate: 'Update successful',
    failUpdate: 'Update failed',
    failDelete: 'Delete failed',
    failAdd: 'Add failed',
    generalInfo: 'General information',
    rabitMQ: 'Communication connection',
    registryConnect: 'Registration connection',
    videoConnect: 'Video connection',
    update: 'Update',
    edit: 'Edit',
    idStation: 'Station ID',
    appName: 'App name',
    method: 'Method',
    address: 'IP address',
    port: 'Port',
    urlApi: 'Api Url',
    version: 'Version',
    accountConnect: 'Account',
    password: 'Password',
    titleNews: 'Newsletter list',
    newsletterName: 'Newsletter name',
    camList: 'Camera List',
    add: 'Add new',
    save: 'Save',
    saveChange: 'Save',
    camID: 'ID camera',
    lane: 'Lane',
    postInspection: 'Post Inspection',
    addUser: 'Add user',
    success: 'Success',
    failed: 'Failed',
    download: 'Download',
  },
  notify: {
    searchBySource: 'Search by source',
    priority: 'Priority',
    typeNotify: 'Type notify',
    warningOverload: 'Warning overload',
    overloadToPunishment: 'Overload to punishment',
    violationPunishment: 'Violation punishment',
    markReadAll: 'Mark read all',
    source: 'Source',
    content: 'Content',
    low: 'Low',
    medium: 'Medium',
    high: 'High',
    receiveNotify: 'Receive notify',
    updateReceiveNotifyStatusSuccess: 'Update notification status successfully',
    on: 'On',
    off: 'Off',
    notifyBell: 'Notify',
    viewAll: 'View all',
  },
  aboutUs: {
    infoVesion: 'Version information',
    company: 'VIETNAM EXPRESSWAY CONSULTANT JOINT STOCK COMPANY',
    address: 'Floor 5, CT1 Bac Ha Building C14, To Huu Street, Nam Tu Liem district , Hanoi',
    version: 'Version',
    updateTime: 'Date of update',
    license: 'License',
  },
  administration: {
    category: {
      administrativeDepartment: {
        createUnit: 'Create unit',
        unitName: 'Unit Name',
        unitCode: 'Unit Code',
        unitType: 'Unit Type',
        action: 'Action',
        editUnit: 'Edit unit',
        memberName: 'Name member',
        infoUnit: 'Information unit',
        infoDepartment: 'Information department',
        listMemberUnit: 'List member',
        departmentName: 'Department name',
        departmentCode: 'Department code',
        unit: 'Unit',
        department: 'Department',
        personnel: 'Personnel',
        supplierLeader: 'Supplier Leader',
        departmentDescription: 'Department description',
        createDepartment: 'Create department',
        editDepartment: 'Edit department',
        nameOfTheResponsible: 'Name of the responsible officer',
        description: 'Description',
        unitAddress: 'Unit address',
        contentDeleteUnit: 'You definitely want to delete this unit?',
        titleDeleteUnit: 'Delete unit',
        contentDeleteDepartment: 'You definitely want to delete this department?',
        titleDeleteDepartment: 'Delete department',
      },
      report: {
        importReport: 'Import statistical report',
        import: 'Import',
        editReport: 'Edit',
        exportFile: 'Export excel',
        line: 'line',
        station: 'Toll station',
        reportName: 'Report Name',
        timeCreate: 'Time Create',
        fileReport: 'File Report',
        contentDelete: 'You definitely want to delete this report?',
        titleDelete: 'Delete report',
      },
    },
    ip: {
      import: 'Import IP list',
      export: 'Export IP list',
      addNew: 'Add IP',
      edit: 'Edit IP',
      confirmDelete: 'Are you sure you want to delete this IP?',
      confirmDeleteFile: 'Are you sure you want to delete this file?',
      addSuccess: 'Add IP successfully',
      editSuccess: 'Edit IP successfully',
      saveSuccess: 'Save successfully',
      importText: 'Upload Excel file to import IP list',
      errorImport: 'Có lỗi trong quá trình Import, vui lòng xem lại danh sách IP lỗi!',
    },
    action: {
      action: 'Action',
      actionTime: 'Action time',
      actionResult: 'Action result',
    },
    backup: {
      configBackup: 'Config backup database',
      historyBackup: 'History backup database',
      schedule: 'Backup schedule',
      backupTime: 'Backup time',
      everyHour: 'Every hour',
      everyDay: 'Every day',
      everyWeek: 'Every week',
      everyMonth: 'Every month',
      saveConfig: 'Save config',
      folder: 'Folder',
      fileName: 'Filename',
      time: 'Backup time',
      stored: 'Stored',
      tempDeleted: 'Temporary deleted',
      permanentDeleted: 'Permanent deleted',
      restore: 'Restore',
      tempDelete: 'Temporary delete',
      permanentDelete: 'Permanent delete',
      confirmSaveConfig: 'Are you sure you want to save this configuration?',
      confirmTempDelete: 'Are you sure you want to temporarily delete this record?',
      confirmPermanentDelete: 'Are you sure you want to permanently delete this record?',
      confirmRestore: 'Are you sure you want to restore this record?',
      restoreSuccess: 'Restore successfully',
    },
    log: {
      time: 'Stored time',
      download: 'Download',
      restoreSuccess: 'Restore successfully',
    },
    role: {
      detail: 'Role',
      roleName: 'Role name',
      roleCode: 'Role code',
      description: 'Description',
      feature: 'Feature',
      confirmDelete: 'Are you sure you want to remove this role?',
      confirmUsedDelete:
        'Role has been assigned. If you remove this role, all accounts assigned to it will be blocked. Are you sure you want to remove this role?',
      all: 'All',
      view: 'View',
      create: 'Create',
      alter: 'Alter',
      delete: 'Delete',
      export: 'Export',
      approve: 'Approve',
      confirm: 'Confirm',
      explain: 'Explain',
      notify: 'Notify',
    },
  },
  monitoring: {
    toll: {
      typeKPI: 'Type KPI',
      vehicleDetectionRate: 'Vehicle detection rate',
      terminalCardRecognitionRate: 'Terminal card recognition rate',
      licensePlateRecognitionRate: 'License plate recognition rate',
      tollCollectionSystem: 'ETC toll collection system KPI',
      explanationNotice: 'Explanation notice',
      createExplanationNotice: 'Create an explanation message',
      nameExplanationNotice: 'Name of the explanation notice',
      contentExplanationNotice: 'Content of the explanatory notice',
      fromTollCollectionUnitReport: 'From toll collection unit report',
      transactionType: 'Transaction Type',
      transactionTypeAbnormal: 'Transaction Type Abnormal',
      faceValue: 'Face value',
      exemptVehicleType: 'Exempt Vehicle Type',
      suspect: 'Suspect',
      freeType: 'Free Type',
      warningList: 'Warning list',
      warningThreshold: 'Configure warning thresholds',
      warningType: 'Warning Type',
      contentWarning: 'Warning content',
      warningTime: 'Warning time',
      infoConfig: 'Configuration information',
      distanceBetweenToTransaction: 'Time gap between two consecutive transactions',
      KPIThresholdStation: 'KPI threshold by station',
      KPIThresholdGland: 'KPI threshold by line',
      KPIThresholdLane: 'Lane KPI Threshold',
      timeTakenExit: 'Time taken for vehicle to exit the highway',
      cancel: 'Cancel',
      viewed: 'Viewed',
      notView: 'Have not seen',
      deleteTransaction: 'Delete transaction',
      confirmDelete: 'Are you sure you want to delete the selected transaction?',
      changeHis: 'Version',
      revenueDecline: 'Decrease in revenue (VND)',
      typeTicket: 'Type ticket',
      timeToSick: 'Time to Sick',
      timeToLoop: 'Time to Loop',
    },
    deviceETC: {
      addNewApp: 'Add new App',
      nameApp: 'Name app',
      link: 'Link',
      infoApp: 'Info App',
      PRTG: {
        addNewLink: 'Add new Link',
        editLink: 'Edit link',
        fieldsRequired: 'Field requires entry',
        enterUpto: 'Enter up to 5000 characters',
      },
      connectBE: {
        softwareName: 'Software Name',
      },
      allAroundCamera: {
        nameCamera: 'Name Camera',
      },
    },
    rating: {
      addRating: 'Add a review',
      deleteRating: 'Delete a review',
      editRating: 'Edit',
      evaluationInfo: 'Evaluation information',
      criteriaType: 'Criteria type',
      criteriaGroup: 'Criteria group',
      timeRating: 'Evaluation time',
      totalPoint: 'Total score',
      title: 'Title',
      facilities: 'Facilities',
      reliability: 'Reliability',
      responsiveness: 'Responsiveness',
      serviceCapacity: 'Service Capacity',
      serviceCulture: 'Service Culture',
      evaluationCriteria: 'Evaluation Criteria',
      maxScore: 'Maximum Score',
      minusPoint: 'Minus Point',
      ratingScore: 'Rating Score',
      fileRating: 'Attached file',
      addFiles: 'Add files',
      detailViolation: 'Details of the violation, note',
      score: 'Score',
    },
    diary: {
      addDiary: 'Add Diary',
      editDiary: 'Edit Diary',
      deleteDiary: 'Delete Diary',
      infoDiary: 'Infomation Diary',
      job: 'Job',
      contentDetail: 'Content Detail',
    },
    errorHandling: {
      nameEvent: 'Name Event',
      typeEvent: 'Type Event',
      addEvent: 'Add Event',
      infoEvent: 'Event Information',
      contentEvent: 'Event Content',
      sendEvent: 'Send Event',
      progress: 'Progress',
      result: 'Result',
      updateProgress: 'Update process - event execution results',
      closeEvent: 'Close Event',
      confirmCloseEvent: 'Do you want to close the event?',
      deleteEvent: 'Delete Event',
      confirmDeleteEvent: 'Do you want to delete the event?',
      maintenancePlan: 'Maintenance Plan',
      periodicInspectionAndAcceptancePlan: 'Periodic Inspection and Acceptance Plan',
      monitoringAndEvaluationPlan: 'Monitoring and Evaluation Plan',
      reportProblem: 'Report Problem',
    },
    confirmDelete: 'Do you want to delete this content?',
    confirmExportFile: 'Do you want to export file Excel data?',
    confirmExportPdf: 'Do you want to export file Pdf data?',
    successExportExcel: 'Export Excel file successfully!',
    requestProcessingETC: {
      addNewRequest: 'Add new request',
      contentToImplement: 'Content to Implement',
      addContentToImplement: 'Add content to Implement',
      updateContentToImplement: 'Update content to Implement',
      newContentToImplement: 'Add New content to Implement',
      editContentToImplement: 'Edit content to be executed',
      sendReportRequest: 'Send report on request implementation content',
      requestInformation: 'Requested information',
      activateRequest: 'Activate request',
      sendRequest: 'Send request',
      submitContentReport: 'Submit content report',
      requestName: 'Request Name',
      typeError: 'Type Error',
      creator: 'Creator',
      dateCreate: 'Date Created',
      dateUpdate: 'Date Updated',
      requestContent: 'Request Content',
      attachedPhoto: 'Attached photo',
      closeRequest: 'Close Request',
      deleteRequest: 'Delete Request',
      confirmDeleteRequest: 'Do you want to delete the request?',
      confirmCloseRequest: 'Do you want to close the request?',
      confirmActivateRequest: 'Do you want to activate the request?',
      confirmSendContentRequest: 'Do you want to submit request fulfillment content report?',
      successSendRequest: 'You have sent the request fulfillment to the request creator.',
      outOfMoney: 'Out of money',
      deviceFailure: 'Device Failure',
      suspectedEquipmentFailure: 'Suspected Equipment Failure',
    },
    tollCollectionReport: {
      reportName: 'Report Name',
      deleteReport: 'Delete Report',
      reportPeriod: 'Report Period',
      timeGetReport: 'Time to Get Report',
      forecastTime: 'Forecast Time',
      makeReport: 'Make a Report',
      generalAssessment: 'General Assessment',
      conclude: 'Conclude',
      viewData: 'View Data',
      info: 'Info',
      requestOpen: 'Request is open',
      requestProcessing: 'Request is processing',
      requestProcessed: 'Request is processed',
      requestClosed: 'Request is closed',
      exportExcel: 'Export file Excel',
      exportPdf: 'Export file PDF',
      uploadFile: 'Upload signed file',
      downloadFile: 'Download the signed file',
      removeFile: 'Delete signed file',
      confirmDeleteFile: 'Are you sure you want to delete the signed file of the report?',
      selectSearchPeriod: 'You have not selected a search period',
      downloadSignedSuccess: 'Downloaded the signed document successfully.',
      deleteSignedSuccess: 'Successfully deleted the signed document.',
      planContent: 'Plan content',
    },
  },
  explanationSupport: {
    typeExplanation: 'Explanation type',
    typeDifferent: 'Different type of error',
    explanationName: 'Explanation name',
    explanationReport: 'Explanation report',
    waitingForExplanation: 'Waiting for explanation',
    Explained: 'Explained',
    Rejected: 'Rejected',
    Reject: 'Reject',
    Approved: 'Approved',
    Approve: 'Approve',
    Confirmed: 'Confirmed',
    notConfirmed: 'Not confirmed',
    quickExplanation: 'Quick explanation',
    editExplanation: 'Quick explanation correction',
    newCreate: 'New create',
    dataList: 'Data list',
    confirmExplanation: 'Confirm explanation',
    sendNotify: 'Send notification',
    deleteNotify: 'Delete notification',
    editNotify: 'Update notification',
    unitOfficers: 'Officer of the toll collection unit',
    feeCollectionUnit: 'Fee collection unit',
    deleteExplanation: 'Do you want to delete the explanation notice?',
    confirmDialogExplanation: 'Do you want to confirm the explanation?',
    confirmDialogFile: 'Do you want to delete the explanation report?',
    reasonNotConfirm: 'Reason not confirmed',
    reasonReject: 'Reason reject',
    approveExplanation: 'Do you want to approve the explanation notice?',
    limitFile: 'You can only import a maximum of {0} files',
    textActionSuccess: '{0} success',
    validFile: 'This field cannot be left blank',
    editTransaction: 'Edit transaction',
    opinion: 'Opinion',
    opinionLeader: 'Opinions of leaders of toll collection units',
    opinionVec: 'VEC staff opinions',
  },
  currency: {
    thousand: 'K',
    million: 'M',
    billion: 'B',
  },
  dashboard: {
    allRoute: 'All route',
    rateRecognizeVehicle: 'Vehicle recognition rate',
    rateRecognizeEtag: 'E-tag recognition rate',
    rateRecognizePlate: 'License plate recognition rate',
    chartTraffic: 'Vehicle traffic chart',
    chartRevenue: 'Revenue chart',
    chartTrafficForecast: 'Vehicle traffic forecast',
    chartRevenueForecast: 'Revenue forecast',
    systemKPI: 'System KPI',
    barChart: 'Bar chart',
    lineChart: 'Line chart',
    viewChart: 'View Chart',
    map: 'Map',
    todo: 'Todo',
    incident: 'Incident',
    incidentType: 'Incident type',
    unprocessed: 'Unprocessed',
    processing: 'Processing',
    processed: 'Processed',
    config: 'Config display position',
    warning: 'Warning',
    warnAbnormal: 'Abnormal',
    warnRevenue: 'Revenue decline',
    warnCollect: 'Interrupt file collection',
    vehicle: 'vehicle(s)',
    vnd: 'VND',
  },
  reconciliation: {
    reconc: 'Reconciliation',
    reconcReport: 'Reconciliation report',
    diffTransactionType: 'Difference transaction',
    transactionType: 'Transaction type',
    freeType: 'Free type',
    stationIn: 'Station in',
    timeIn: 'Time in',
    laneIn: 'Lane in',
    stationOut: 'Station out',
    timeOut: 'Time out',
    laneOut: 'Lane out',
    plateRec: 'Plate Rec',
    vehicleType: 'Vehicle type',
    plateReg: 'Plate Reg',
    amount: 'Amount',
    sickOn: 'Sick on',
    loopOn: 'Loop on',
    explainStatus: 'Explanation status',
    recordStatus: 'Record status',
    lostInSystem: 'Lost in system',
    lostInReport: 'Lost in report',
    wrongData: 'Wrong data',
    explained: 'Explained',
    unExplained: 'Not explained',
    waitExplain: 'Wait explain',
    explainedAndUpdate: 'Explained and update transaction',
    recorded: 'Recorded',
    unRecorded: 'Not recorded',
    updated: 'Update recorded',
    unUpdated: 'Update not recorded',
    createExplain: 'Create explanation notice',
    tollCollectionReport: 'Toll collection report',
    exportExcel: 'Export Excel',
    exportPDF: 'Export PDF',
    transactionLostInReport: 'Transaction missing in report',
    transactionLostInSystem: 'Transaction missing in system',
    diffReportAndSystem: 'Difference in system and report',
    wrongRoute: 'Route diff',
    wrongVehicleType: 'Vehicle type diff',
    wrongAmount: 'Amount diff',
    wrongTime: 'Time diff',
    autoDetect: 'Vehicle detected',
    noAutoDetect: 'Vehicle undetected',
    freeNationwide: 'Automated nationwide',
    freeSingle: 'Automated for single-vehicle',
    freeWhitePlate: 'Automated for white-plate vehicles',
    freeConvoys: 'Automated for convoys',
    freeTransNationwide: 'Free transactions nationwide',
    freeTransSingle: 'Free transactions for single-vehicle',
    freeTransHard: 'Manual free transactions',
    freeTransWhitePlate: 'Free transactions for white-plate vehicles',
    freeTransConvoys: 'Free transactions for convoys',
    freeTransETC: 'ETC free transactions',
    contentPostInspect: 'Post inspection content',
    contentDifferent: 'Different content',
    conclusionRecommendations: 'Conclusion and recommendations',
    reference: 'Reference',
    unusual: {
      limitEditTime: 'Limit data editing time',
      warningList: 'Warning List',
      parameterConfiguration: 'Parameter Configuration',
      faceValue: 'Face Value',
      totalMoney: 'Total Money',
      laneTurnover: 'Lane Turnover',
      stationTurnover: 'Station Turnover',
      routeTurnover: 'Route Turnover',
    },
    stationCheckNote: 'You only create explanation requests for transactions at the same station',
    transactionReconciliation: 'Transaction reconciliation configuration',
    reconciliationFreeVehicle: 'Free Vehicle Transaction Reconciliation Configuration',
    configAlert: 'Alert Configuration',
    dataEditTime: 'Data editing time limit',
    reconciliationTime: 'Reconciliation time',
    compareData: 'Comparison data field to alert for discrepancies',
    stationExitTime: 'Station exit time',
    stationInTime: 'Station in time',
    autoIdentifyMP: 'Free vehicle verification automatically recognized',
    nonAutoIdentifyMP: 'Free vehicle reconciliation not automatically recognized',
    invalidGSTPTransaction: 'Wrong with free transaction GSTP system collect',
    invalidFreeCarList: 'Error with free car list',
    warningConditions: 'Warning conditions',
    warningOfDecline:
      'Warning of decline in revenue and traffic compared to the same period last year',
    selectDateOfWarning: 'Select the date of warning of decline in revenue and traffic',
  },
  dateTime: {
    now: 'Now',
    today: 'Today',
    cancel: 'Cancel',
    clear: 'Clear',
    confirm: 'OK',
    selectDate: 'Select date',
    selectTime: 'Select time',
    selectDay: 'Select day',
    selectHour: 'Select hour',
    selectMinute: 'Select minute',
    startDate: 'Start date',
    startTime: 'Start time',
    begin: 'Begin',
    end: 'End',
    endDate: 'End date',
    endTime: 'End time',
    prevYear: 'Previous year',
    nextYear: 'Next year',
    prevMonth: 'Previous month',
    nextMonth: 'Next month',
    month: 'Month',
    year: 'Year',
    day: 'Day',
    month1: 'January',
    month2: 'February',
    month3: 'March',
    month4: 'April',
    month5: 'May',
    month6: 'June',
    month7: 'July',
    month8: 'August',
    month9: 'September',
    month10: 'October',
    month11: 'November',
    month12: 'December',
    weeks: {
      sun: 'Sun',
      mon: 'Mon',
      tue: 'Tue',
      wed: 'Wed',
      thu: 'Thu',
      fri: 'Fri',
      sat: 'Sat',
    },
    months: {
      jan: 'Jan',
      feb: 'Feb',
      mar: 'Mar',
      apr: 'Apr',
      may: 'May',
      jun: 'Jun',
      jul: 'Jul',
      aug: 'Aug',
      sep: 'Sep',
      oct: 'Oct',
      nov: 'Nov',
      dec: 'Dec',
    },
    to: 'to',
  },
  collection: {
    incident: 'Incident',
    incidentType: 'Incident type',
    addIncident: 'Add incident',
    editIncident: 'Edit incident',
    time: 'Time',
    remediationProcess: 'Remediation process',
    deleteLogFile: 'Delete log file',
    deviceLogfileList: 'Device Logfile list',
    signalLogfileList: 'Signal Logfile list',
    BELogfileList: 'BE Logfile list',
    configureDeviceLogfile: 'Configure the time to retrieve the device Logfile',
    configureSignalLogfile: 'Configure the time to retrieve the signal Logfile',
    configureBELogfile: 'Configure the time to retrieve the BE file',
    reportType: 'Report type',
    numberOfRecords: 'Number of records',
    addReport: 'Add report',
    logfileList: 'Logfile list',
    apiConfig: 'API config',
    apiCallPeriod: 'API call period',
    incidentMaintain: 'Maintenance activities',
    incidentControl: 'Close/open lanes',
    incidentStation: 'Station incident',
    incidentTraffic: 'Traffic jams',
    typeFile: 'Type file',
    linkApi: 'Link API',
    configFreeVehicle: 'Free vehicle collection configuration',
    path: 'Path',
    getFile: 'Frequency of retrieving files',
    editReport: 'Edit report',
    ip: 'IP',
    port: 'Port',
    frequency: 'Frequency',
    signalLog: 'Signal log path',
    deviceLog: 'Device log path',
    transactionFile: 'Transaction file path',
    transactionFileFreeVehicle: 'Free vehicle list file path',
    configTimeDelete: 'Configure logfile delete time',
    periodicallyDeleteFiles: 'Periodically delete files',
    warningCollected: 'Warnings collected intermittently',
    resultDataCollection: 'Results of data collection',
    collectSignalLogfile: 'Collect signal logfile',
    collectTransactionBe: 'Collect transactions from BE',
    collectDataApi: 'Collect data API',
    collectDataTdr: 'Collect data TDR',
    collectCarList: 'Collect car listings for free',
    collectReportData: 'Collect reporting data from toll collection units',
    controlStatus: 'Control status',
    startChecking: 'Start checking',
    notDoneYet: 'Not done yet',
    checkingData: 'Checking data',
    explaining: 'Explaining',
    collectionType: 'Collection type',
  },
  files: {
    infoFile: 'Drag and drop or click to upload the file',
    fileSize: 'Maximum file size {0}MB',
    fileType: 'Please upload the file as {0}',
  },
  statisticalReport: {
    vehicleTraffic: 'Vehicle traffic',
    revenue: 'Revenue',
    viewReport: 'View report',
    KPISystem: 'FRONT-END SYSTEM KPI SINGLE LANE TOLL WITH OUTPUT BARRIER AT {0}',
    educationStatistics: 'GD statistics within {0} consecutive days',
    recordNbVehiclePass: 'Record the number of vehicles passing through the lane',
    NbQualifiedVehicles:
      'Vehicles are qualified, card codes are recognized, and ETC transactions are automatically recorded',
    NbVehiclesEligible:
      'Number of eligible vehicles, unable to recognize card code or check license plate',
    NbVehiclesEligibleOut:
      'Number of vehicles eligible for input, unable to recognize card code (check in license plate)',
    NbValidVehiclesEligibleOut:
      'Number of vehicles not eligible for input, card code identified, ETC transaction not recorded (vehicle license plate check)',
    NbVehiclesConditionsTrue:
      'Vehicles are not eligible, have valid terminal card, identify card code',
    NbVehiclesConditions:
      'Ineligible vehicle traffic, with valid terminal card, card code not recognized',
    NbVehiclesNotEnough:
      'Number of qualified vehicles, not enough input, card code recognized (except OTC money)',
    NbVehiclesIneligible:
      'Number of vehicles not eligible, card code can be identified (except for OTC money)',
    validTerminalCard:
      'Valid terminal card media count, card code not recognized (except OTC coins)',
    totalNbQualified:
      'Total number of qualified vehicles with recognized card codes and sufficient input',
    totalNbVehiclesIdentified: 'Total number of times the vehicle identified the terminal tag',
    totalNbQualifiedVehicles: 'Total number of qualified vehicles',
    totalNbVehiclesTerminal: 'Total number of vehicles with valid terminal tags',
    totalNbVehiclesPassing:
      'Total number of vehicles passing through the lane (from monitoring and post-inspection results)',
    nbTimeExcludesLicense:
      'Number of times PT excludes license plate recognition (no license plate, driving close together, non-latin characters)',
    nbVehiclesLicenseFE:
      'Number of vehicles whose license plates are correctly identified by the Front-End',
    //
    errorTransaction: 'Error transaction',
    ETCTransactionEncounteredConnectBE:
      'ETC transaction encountered an error in calculating money deduction (duplicate deduction, wrong input/output vehicle information) or error connecting transaction processing with BE',
    ETCTransactionEncounteredBE:
      'ETC transaction encountered an error connecting GD processing to BE',
    ETCTransactionBarieControl: 'ETC transaction encountered a Barie control processing error',
    KPISystemFE: 'Front-End system KPIs',
    terminalCardKPI: 'Terminal card recognition KPI (98.0%)',
    licensePlateKPI: 'License plate recognition KPI (93%)',
    KPISystemFE98: 'Front-End system KPI (99.8%)',
    freeRecordingKPI: 'Fee recording KPI',
    nbTransactionRecorded: 'Number of transactions recorded and charged after post-audit',
    freeRecordingKPI100: 'Fee recording KPI (100%)',
    //
    reportTrafficRevenuePlan: 'REPORT ON LINE FLOW AND REVENUE PLAN {0}',
    forecast: 'Predict {0}',
    inputTraffic: 'Input traffic',
    outputTraffic: 'Output flow',
    nvBarrierError: 'Number of barrier error transactions',
    collectionForm: 'Collection form',
    vehicleType: 'Type Vehicle {0}',
    OTCVehicle: 'OTC Vehicle',
    MPVehicle: 'MP Vehicle',
    plus: 'Plus',
  },
  verify: {
    enterCode: 'Enter your verify code',
    note: 'Please enter the verify code that the system has sent to your email address. The authentication code is only valid for 90 seconds',
    verify: 'Verify',
    refreshCode: 'Retrieve verify code',
  },
}
